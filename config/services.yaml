# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    # la url base del sistema
    # localmente
    url: http://localhost/web_cotizacion_repuestos/public/
    # produccion
    # url: https://www.eisenparts.com/

    # app id de la aplicacion registrada en mercadopago
    # localmente
    appIdMercadoPago: 6377095623153819
    # produccion

    # cliente secreto de mercadopago
    # local
    clienteSecretoMercadoPago: TEST-6377095623153819-091715-cd70a72465f42ba608c0c7f8abe8fdd6-646196739
    # prod

    # url a la que se redirect cuando se registra correctamente el vendedor
    # local
    urlRedirectMercadoPago: http://localhost/web_cotizacion_repuestos/public/index.php/vincular/vendedor
    # prod
    # urlRedirectMercadoPago: https://www.eisenparts.com/login

    # url a la que se redirect al vendedor cuando se quiere obtener su id
    # esto es previo a ejecutar el curl para obtener los tokens de autorizacion y de refrescado (expira cada 6 meses)
    # localmente 
    urlObtenerIdVendedorMercadoPago: http://localhost/web_cotizacion_repuestos/public/index.php/vincular/vendedor
    # prod 


services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\EventListener\AuthenticationSuccessListener:
        class: App\EventListener\AuthenticationSuccessListener
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccessResponse }